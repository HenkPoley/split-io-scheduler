Index: linux-3.5/include/linux/elevator.h
===================================================================
--- linux-3.5.orig/include/linux/elevator.h	2016-04-25 17:37:03.194476307 +0200
+++ linux-3.5/include/linux/elevator.h	2016-04-25 17:37:03.191142973 +0200
@@ -37,6 +37,73 @@
 typedef int (elevator_init_fn) (struct request_queue *);
 typedef void (elevator_exit_fn) (struct elevator_queue *);
 
+typedef ssize_t (elevator_read_entry_fn) (struct request_queue *rq,
+										  struct file* filp,
+										  size_t count,
+										  loff_t *pos,
+										  void** opaque,
+										  int sched_uniq);
+
+typedef ssize_t (elevator_write_entry_fn) (struct request_queue *rq,
+										   struct file* filp,
+										   size_t count,
+										   loff_t *pos,
+										   void** opaque,
+										   int sched_uniq);
+
+typedef int (elevator_mkdir_entry_fn) (struct request_queue* rq,
+										   struct inode *dir,
+										   struct dentry *dentry,
+										   int mode,
+										   void **opaque,
+										   int sched_uniq);
+
+typedef int (elevator_create_entry_fn) (struct request_queue* rq,
+										struct inode *dir,
+										struct dentry *dentry,
+										int mode,
+										void **opaque,
+										int sched_uniq);
+
+typedef int (elevator_fsync_entry_fn) (struct request_queue *rq,
+									   struct file* filp,
+									   int datasync,
+									   void** opaque,
+									   int sched_uniq);
+
+typedef void (elevator_read_return_fn) (struct request_queue *rq,
+										void *opaque,
+										ssize_t rv,
+										int sched_uniq);
+
+typedef void (elevator_write_return_fn) (struct request_queue *rq,
+										 void *opaque,
+										 ssize_t rv,
+										 int sched_uniq);
+
+typedef void (elevator_fsync_return_fn) (struct request_queue *rq,
+										 void *opaque,
+										 int rv,
+										 int sched_uniq);
+
+typedef void (elevator_mkdir_return_fn) (struct request_queue *rq,
+										 void *opaque,
+										 int rv,
+										 int sched_uniq);
+typedef void (elevator_create_return_fn) (struct request_queue *rq,
+										  void *opaque,
+										  int rv,
+										  int sched_uniq);
+
+typedef void (elevator_causes_dirty_fn) (struct request_queue *rq,
+										 struct cause_list* causes,
+										 struct task_struct* new,
+										 struct inode *inode,
+										 long pos);
+
+typedef void (elevator_causes_free_fn) (struct request_queue *rq,
+										struct cause_list* causes);
+
 struct elevator_ops
 {
 	elevator_merge_fn *elevator_merge_fn;
@@ -65,6 +132,39 @@
 
 	elevator_init_fn *elevator_init_fn;
 	elevator_exit_fn *elevator_exit_fn;
+
+	// these are called WITHOUT the queue_lock
+	elevator_read_entry_fn *elevator_read_entry_fn;
+	elevator_write_entry_fn *elevator_write_entry_fn;
+	elevator_fsync_entry_fn *elevator_fsync_entry_fn;
+	elevator_mkdir_entry_fn *elevator_mkdir_entry_fn;
+	elevator_create_entry_fn *elevator_create_entry_fn;
+	elevator_read_return_fn *elevator_read_return_fn;
+	elevator_write_return_fn *elevator_write_return_fn;
+	elevator_fsync_return_fn *elevator_fsync_return_fn;
+	elevator_mkdir_return_fn *elevator_mkdir_return_fn;
+	elevator_create_return_fn *elevator_create_return_fn;
+
+	// these are called WITH the queue_lock
+	elevator_causes_dirty_fn *elevator_causes_dirty_fn;
+	// don't take a reference to the cause_list here!
+	elevator_causes_free_fn *elevator_causes_free_fn;
+};
+
+// fields of elevator_ops pertaining to syscalls
+struct elevator_syscall_ops
+{
+	elevator_read_entry_fn *read_entry_fn;
+	elevator_write_entry_fn *write_entry_fn;
+	elevator_fsync_entry_fn *fsync_entry_fn;
+	elevator_mkdir_entry_fn *mkdir_entry_fn;
+	elevator_create_entry_fn *create_entry_fn;
+	elevator_read_return_fn *read_return_fn;
+	elevator_write_return_fn *write_return_fn;
+	elevator_fsync_return_fn *fsync_return_fn;
+	elevator_mkdir_return_fn *mkdir_return_fn;
+	elevator_create_return_fn *create_return_fn;
+	int sched_uniq;
 };
 
 #define ELV_NAME_MAX	(16)
@@ -114,6 +214,7 @@
  */
 extern void elv_dispatch_sort(struct request_queue *, struct request *);
 extern void elv_dispatch_add_tail(struct request_queue *, struct request *);
+extern void elv_dispatch_add_head(struct request_queue *, struct request *);
 extern void elv_add_request(struct request_queue *, struct request *, int);
 extern void __elv_add_request(struct request_queue *, struct request *, int);
 extern int elv_merge(struct request_queue *, struct request **, struct bio *);
