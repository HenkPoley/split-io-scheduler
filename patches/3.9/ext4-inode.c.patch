Index: linux-3.9/fs/ext4/inode.c
===================================================================
--- linux-3.9.orig/fs/ext4/inode.c	2016-04-25 19:50:26.988747555 +0200
+++ linux-3.9/fs/ext4/inode.c	2016-04-25 19:51:40.262078626 +0200
@@ -37,6 +37,7 @@
 #include <linux/printk.h>
 #include <linux/slab.h>
 #include <linux/ratelimit.h>
+#include <linux/cause_tags.h>
 
 #include "ext4_jbd2.h"
 #include "xattr.h"
@@ -1698,7 +1699,7 @@
  * The function skips space we know is already mapped to disk blocks.
  *
  */
-static void mpage_da_map_and_submit(struct mpage_da_data *mpd)
+static void __mpage_da_map_and_submit(struct mpage_da_data *mpd)
 {
 	int err, blks, get_blocks_flags;
 	struct ext4_map_blocks map, *mapp = NULL;
@@ -1821,6 +1822,14 @@
 	mpd->io_done = 1;
 }
 
+static void mpage_da_map_and_submit(struct mpage_da_data *mpd)
+{
+	__mpage_da_map_and_submit(mpd);
+	// we are no longer acting as a proxy for dirty buffers
+	put_cause_list(current->causes);
+	current->causes = new_cause_list();
+}
+
 #define BH_FLAGS ((1 << BH_Uptodate) | (1 << BH_Mapped) | \
 		(1 << BH_Delay) | (1 << BH_Unwritten))
 
@@ -2417,6 +2426,10 @@
 				 * progress with the page in ext4_writepage
 				 */
 				if (ext4_bh_delay_or_unwritten(NULL, bh)) {
+						// are we a proxy?
+						if (current->causes)
+							cause_list_copy(bh->causes, &current->causes);
+
 					mpage_add_bh_to_extent(mpd, logical,
 							       bh->b_state);
 					if (mpd->io_done)
@@ -2511,6 +2524,10 @@
 	if (unlikely(sbi->s_mount_flags & EXT4_MF_FS_ABORTED))
 		return -EROFS;
 
+	// now acting as cause proxy
+	BUG_ON(current->causes);
+	current->causes = new_cause_list();
+
 	if (wbc->range_start == 0 && wbc->range_end == LLONG_MAX)
 		range_whole = 1;
 
@@ -2653,6 +2670,10 @@
 		mapping->writeback_index = done_index;
 
 out_writepages:
+	// done acting as cause proxy
+	put_cause_list(current->causes);
+	current->causes = NULL;
+
 	wbc->nr_to_write -= nr_to_writebump;
 	wbc->range_start = range_start;
 	trace_ext4_da_writepages_result(inode, wbc, ret, pages_written);
