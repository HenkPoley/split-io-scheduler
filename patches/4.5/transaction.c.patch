Index: linux-4.5/fs/jbd2/transaction.c
===================================================================
--- linux-4.5.orig/fs/jbd2/transaction.c	2016-04-27 15:37:10.115771775 +0200
+++ linux-4.5/fs/jbd2/transaction.c	2016-04-27 15:44:27.985760544 +0200
@@ -29,6 +29,8 @@
 #include <linux/backing-dev.h>
 #include <linux/bug.h>
 #include <linux/module.h>
+#include <linux/kthread.h>
+#include <linux/cause_tags.h>
 
 #include <trace/events/jbd2.h>
 
@@ -61,6 +63,7 @@
 {
 	if (unlikely(ZERO_OR_NULL_PTR(transaction)))
 		return;
+	put_cause_list(transaction->causes);
 	kmem_cache_free(transaction_cache, transaction);
 }
 
@@ -105,6 +108,8 @@
 	transaction->t_start = jiffies;
 	transaction->t_requested = 0;
 
+	transaction->causes = new_cause_list();
+
 	return transaction;
 }
 
@@ -1386,6 +1391,9 @@
 		handle->h_buffer_credits--;
 	}
 
+	cause_list_add(&transaction->causes, current);
+	cause_list_add(&jh->causes, current);
+
 	/*
 	 * fastpath, to avoid expensive locking.  If this buffer is already
 	 * on the running transaction's metadata list there is nothing to do.
@@ -1690,6 +1698,7 @@
 	 * Setting max_batch_time to 0 disables this completely.
 	 */
 	pid = current->pid;
+
 	if (handle->h_sync && journal->j_last_sync_writer != pid &&
 	    journal->j_max_batch_time) {
 		u64 commit_time, trans_time;
